(function(exports){'use strict';var nullFunction=function(){};var nullPlatform={getType:function(){return 'null';},isSupported:function(){return false;},update:nullFunction};var AnimFrameUpdateStrategy=function(requestAnimationFrame){var that=this;var win=window;this.update=nullFunction;this.requestAnimationFrame=requestAnimationFrame||win.requestAnimationFrame||win.webkitRequestAnimationFrame||win.mozRequestAnimationFrame;this.tickFunction=function(){that.update();that.startTicker();};this.startTicker=function(){that.requestAnimationFrame.apply(win,[that.tickFunction]);};};AnimFrameUpdateStrategy.prototype.start=function(updateFunction){this.update=updateFunction||nullFunction;this.startTicker();};var ManualUpdateStrategy=function(){};ManualUpdateStrategy.prototype.update=nullFunction;ManualUpdateStrategy.prototype.start=function(updateFunction){this.update=updateFunction||nullFunction;};var WebKitPlatform=function(listener,gamepadGetter){this.listener=listener;this.gamepadGetter=gamepadGetter;this.knownGamepads=[];};WebKitPlatform.factory=function(listener){var platform=nullPlatform;var navigator=window&&window.navigator;if(navigator){if(typeof(navigator.webkitGamepads)!=='undefined'){platform=new WebKitPlatform(listener,function(){return navigator.webkitGamepads;});}else if(typeof(navigator.webkitGetGamepads)!=='undefined'){platform=new WebKitPlatform(listener,function(){return navigator.webkitGetGamepads();});}}
return platform;};WebKitPlatform.getType=function(){return 'WebKit';},WebKitPlatform.prototype.getType=function(){return WebKitPlatform.getType();},WebKitPlatform.prototype.isSupported=function(){return true;};WebKitPlatform.prototype.update=function(){var that=this;var gamepads=Array.prototype.slice.call(this.gamepadGetter(),0);var gamepad;var i;for(i=this.knownGamepads.length-1;i>=0;i--){gamepad=this.knownGamepads[i];if(gamepads.indexOf(gamepad)<0){this.knownGamepads.splice(i,1);this.listener._disconnect(gamepad);}}
for(i=0;i<gamepads.length;i++){gamepad=gamepads[i];if(gamepad&&(that.knownGamepads.indexOf(gamepad)<0)){that.knownGamepads.push(gamepad);that.listener._connect(gamepad);}}};var FirefoxPlatform=function(listener){this.listener=listener;window.addEventListener('gamepadconnected',function(e){listener._connect(e.gamepad);});window.addEventListener('gamepaddisconnected',function(e){listener._disconnect(e.gamepad);});};FirefoxPlatform.factory=function(listener){var platform=nullPlatform;if(window&&(typeof(window.addEventListener)!=='undefined')){platform=new FirefoxPlatform(listener);}
return platform;};FirefoxPlatform.getType=function(){return 'Firefox';},FirefoxPlatform.prototype.getType=function(){return FirefoxPlatform.getType();},FirefoxPlatform.prototype.isSupported=function(){return true;};FirefoxPlatform.prototype.update=nullFunction;var Gamepad=function(updateStrategy){this.updateStrategy=updateStrategy||new AnimFrameUpdateStrategy();this.gamepads=[];this.listeners={};this.platform=nullPlatform;this.deadzone=0.03;this.maximizeThreshold=0.97;};Gamepad.UpdateStrategies={AnimFrameUpdateStrategy:AnimFrameUpdateStrategy,ManualUpdateStrategy:ManualUpdateStrategy};Gamepad.PlatformFactories=[WebKitPlatform.factory,FirefoxPlatform.factory];Gamepad.Type={PLAYSTATION:'playstation',LOGITECH:'logitech',XBOX:'xbox',UNKNOWN:'unknown'};Gamepad.Event={CONNECTED:'connected',UNSUPPORTED:'unsupported',DISCONNECTED:'disconnected',TICK:'tick',BUTTON_DOWN:'button-down',BUTTON_UP:'button-up',AXIS_CHANGED:'axis-changed'};Gamepad.StandardButtons=['FACE_1','FACE_2','FACE_3','FACE_4','LEFT_TOP_SHOULDER','RIGHT_TOP_SHOULDER','LEFT_BOTTOM_SHOULDER','RIGHT_BOTTOM_SHOULDER','SELECT_BACK','START_FORWARD','LEFT_STICK','RIGHT_STICK','DPAD_UP','DPAD_DOWN','DPAD_LEFT','DPAD_RIGHT','HOME'];Gamepad.StandardAxes=['LEFT_STICK_X','LEFT_STICK_Y','RIGHT_STICK_X','RIGHT_STICK_Y'];var getControlName=function(names,index,extraPrefix){return(index<names.length)?names[index]:extraPrefix+(index-names.length+1);};Gamepad.StandardMapping={env:{},buttons:{byButton:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},axes:{byAxis:[0,1,2,3]}};Gamepad.Mappings=[{env:{platform:FirefoxPlatform.getType(),type:Gamepad.Type.PLAYSTATION},buttons:{byButton:[14,13,15,12,10,11,8,9,0,3,1,2,4,6,7,5,16]},axes:{byAxis:[0,1,2,3]}},{env:{platform:WebKitPlatform.getType(),type:Gamepad.Type.LOGITECH},buttons:{byButton:[1,2,0,3,4,5,6,7,8,9,10,11,11,12,13,14,10]},axes:{byAxis:[0,1,2,3]}},{env:{platform:FirefoxPlatform.getType(),type:Gamepad.Type.LOGITECH},buttons:{byButton:[0,1,2,3,4,5,-1,-1,6,7,8,9,11,12,13,14,10],byAxis:[-1,-1,-1,-1,-1,-1,[2,0,1],[2,0,-1]]},axes:{byAxis:[0,1,3,4]}}];Gamepad.prototype.init=function(){var platform=Gamepad.resolvePlatform(this);var that=this;this.platform=platform;this.updateStrategy.start(function(){that._update();});return platform.isSupported();};Gamepad.prototype.bind=function(event,listener){if(typeof(this.listeners[event])==='undefined'){this.listeners[event]=[];}
this.listeners[event].push(listener);return this;};Gamepad.prototype.unbind=function(type,listener){if(typeof(type)==='undefined'){this.listeners={};return;}
if(typeof(listener)==='undefined'){this.listeners[type]=[];return;}
if(typeof(this.listeners[type])==='undefined'){return false;}
for(var i=0;i<this.listeners[type].length;i++){if(this.listeners[type][i]===listener){this.listeners[type].splice(i,1);return true;}}
return false;};Gamepad.prototype.count=function(){return this.gamepads.length;};Gamepad.prototype._fire=function(event,data){if(typeof(this.listeners[event])==='undefined'){return;}
for(var i=0;i<this.listeners[event].length;i++){this.listeners[event][i].apply(this.listeners[event][i],[data]);}};Gamepad.getNullPlatform=function(){return Object.create(nullPlatform);};Gamepad.resolvePlatform=function(listener){var platform=nullPlatform;var i;for(i=0;!platform.isSupported()&&(i<Gamepad.PlatformFactories.length);i++){platform=Gamepad.PlatformFactories[i](listener);}
return platform;};Gamepad.prototype._connect=function(gamepad){var mapping=this._resolveMapping(gamepad);var count;var i;gamepad.state={};gamepad.lastState={};gamepad.updater=[];count=mapping.buttons.byButton.length;for(i=0;i<count;i++){this._addButtonUpdater(gamepad,mapping,i);}
count=mapping.axes.byAxis.length;for(i=0;i<count;i++){this._addAxisUpdater(gamepad,mapping,i);}
this.gamepads[gamepad.index]=gamepad;this._fire(Gamepad.Event.CONNECTED,gamepad);};Gamepad.prototype._addButtonUpdater=function(gamepad,mapping,index){var updater=nullFunction;var controlName=getControlName(Gamepad.StandardButtons,index,'EXTRA_BUTTON_');var getter=this._createButtonGetter(gamepad,mapping.buttons,index);var that=this;var buttonEventData={gamepad:gamepad,control:controlName};gamepad.state[controlName]=0;gamepad.lastState[controlName]=0;updater=function(){var value=getter();var lastValue=gamepad.lastState[controlName];var isDown=value>0.5;var wasDown=lastValue>0.5;gamepad.state[controlName]=value;if(isDown&&!wasDown){that._fire(Gamepad.Event.BUTTON_DOWN,Object.create(buttonEventData));}else if(!isDown&&wasDown){that._fire(Gamepad.Event.BUTTON_UP,Object.create(buttonEventData));}
if((value!==0)&&(value!==1)&&(value!==lastValue)){that._fireAxisChangedEvent(gamepad,controlName,value);}
gamepad.lastState[controlName]=value;};gamepad.updater.push(updater);};Gamepad.prototype._addAxisUpdater=function(gamepad,mapping,index){var updater=nullFunction;var controlName=getControlName(Gamepad.StandardAxes,index,'EXTRA_AXIS_');var getter=this._createAxisGetter(gamepad,mapping.axes,index);var that=this;gamepad.state[controlName]=0;gamepad.lastState[controlName]=0;updater=function(){var value=getter();var lastValue=gamepad.lastState[controlName];gamepad.state[controlName]=value;if((value!==lastValue)){that._fireAxisChangedEvent(gamepad,controlName,value);}
gamepad.lastState[controlName]=value;};gamepad.updater.push(updater);};Gamepad.prototype._fireAxisChangedEvent=function(gamepad,controlName,value){var eventData={gamepad:gamepad,axis:controlName,value:value};this._fire(Gamepad.Event.AXIS_CHANGED,eventData);};Gamepad.prototype._createButtonGetter=(function(){var nullGetter=function(){return 0;};var createRangeGetter=function(valueGetter,from,to){var getter=nullGetter;if(from<to){getter=function(){var range=to-from;var value=valueGetter();value=(value-from)/range;return(value<0)?0:value;};}else if(to<from){getter=function(){var range=from-to;var value=valueGetter();value=(value-to)/range;return(value>1)?0:(1-value);};}
return getter;};var isArray=function(thing){return Object.prototype.toString.call(thing)==='[object Array]';};return function(gamepad,buttons,index){var getter=nullGetter;var entry;var that=this;entry=buttons.byButton[index];if(entry!==-1){if((typeof(entry)==='number')&&(entry<gamepad.buttons.length)){getter=function(){return gamepad.buttons[entry];};}}else if(buttons.byAxis&&(index<buttons.byAxis.length)){entry=buttons.byAxis[index];if(isArray(entry)&&(entry.length==3)&&(entry[0]<gamepad.axes.length)){getter=function(){var value=gamepad.axes[entry[0]];return that._applyDeadzoneMaximize(value);};getter=createRangeGetter(getter,entry[1],entry[2]);}}
return getter;};})();Gamepad.prototype._createAxisGetter=(function(){var nullGetter=function(){return 0;};return function(gamepad,axes,index){var getter=nullGetter;var entry;var that=this;entry=axes.byAxis[index];if(entry!==-1){if((typeof(entry)==='number')&&(entry<gamepad.axes.length)){getter=function(){var value=gamepad.axes[entry];return that._applyDeadzoneMaximize(value);};}}
return getter;};})();Gamepad.prototype._disconnect=function(gamepad){var newGamepads=[],i;if(typeof(this.gamepads[gamepad.index])!=='undefined'){delete this.gamepads[gamepad.index];}
for(i=0;i<this.gamepads.length;i++){if(typeof(this.gamepads[i])!=='undefined'){newGamepads[i]=this.gamepads[i];}}
this.gamepads=newGamepads;this._fire(Gamepad.Event.DISCONNECTED,gamepad);};Gamepad.prototype._resolveControllerType=function(id){id=id.toLowerCase();if(id.indexOf('playstation')!==-1){return Gamepad.Type.PLAYSTATION;}else if(id.indexOf('logitech')!==-1||id.indexOf('wireless gamepad')!==-1){return Gamepad.Type.LOGITECH;}else if(id.indexOf('xbox')!==-1||id.indexOf('360')!==-1){return Gamepad.Type.XBOX;}else{return Gamepad.Type.UNKNOWN;}};Gamepad.prototype._resolveMapping=function(gamepad){var mappings=Gamepad.Mappings;var mapping=null;var env={platform:this.platform.getType(),type:this._resolveControllerType(gamepad.id)};var i;var test;for(i=0;!mapping&&(i<mappings.length);i++){test=mappings[i];if(Gamepad.envMatchesFilter(test.env,env)){mapping=test;}}
return mapping||Gamepad.StandardMapping;};Gamepad.envMatchesFilter=function(filter,env){var result=true;var field;for(field in filter){if(filter[field]!==env[field]){result=false;}}
return result;};Gamepad.prototype._update=function(){this.platform.update();this.gamepads.forEach(function(gamepad){if(gamepad){gamepad.updater.forEach(function(updater){updater();});}});if(this.gamepads.length>0){this._fire(Gamepad.Event.TICK,this.gamepads);}},Gamepad.prototype._applyDeadzoneMaximize=function(value,deadzone,maximizeThreshold){deadzone=typeof(deadzone)!=='undefined'?deadzone:this.deadzone;maximizeThreshold=typeof(maximizeThreshold)!=='undefined'?maximizeThreshold:this.maximizeThreshold;if(value>=0){if(value<deadzone){value=0;}else if(value>maximizeThreshold){value=1;}}else{if(value>-deadzone){value=0;}else if(value<-maximizeThreshold){value=-1;}}
return value;};exports.Gamepad=Gamepad;})(((typeof(module)!=='undefined')&&module.exports)||window);
